int_non_init @n
function insertsort(%a1[]):



%i2 = alloca(%i2) #4
%i2 = #1

label .L3
if %i2 >= @n goto .L4

%temp3 = alloca(%temp3) #4
%temp3 = %a1[%i2]
%j3 = alloca(%j3) #4
%j3 = %i2 - #1

label .L1
if %j3 <= #-1 goto .L2

%11 = %a1[%j3]
if %temp3 >= %11 goto .L2

%15 = %j3 + #1
%18 = %11
%a1[%15] = %18
%j3 = %j3 - #1
goto .L1

label .L2
%24 = %j3 + #1
%a1[%24] = %temp3
%i2 = %i2 + #1
goto .L3

label .L4
%2 = #0

return %2

function main():
%a6 = alloca #40



@n = #10
%33 = & %a6
call memset(%33,#0,#40)
%a6[#0] = #4
%a6[#1] = #3
%a6[#2] = #9
%a6[#3] = #2
%a6[#4] = #0
%a6[#5] = #1
%a6[#6] = #6
%a6[#7] = #5
%a6[#8] = #7
%a6[#9] = #8
%i6 = alloca(%i6) #4
%i6 = call insertsort(%33)

label .L5
if %i6 >= @n goto .L6

%tmp7 = alloca(%tmp7) #4
%78 = %a6[%i6]
call putint(%78)
call putch(#10)
%i6 = %i6 + #1
goto .L5

label .L6
%31 = #0

return %31

